// Mixins and functions for all styles and structures


// Color mixins     -----------------------------------------------------------

// Set foreground color custom properties
@mixin color-fg($hue, $shade) {
    --hue-fg: #{$hue};
    --saturation-fg: #{map-get($saturation, $shade)};
    --lightness-fg: #{map-get($lightness, $shade)};
}

@mixin color-fg-transparent($hue, $shade, $alpha) {
    @include color-fg($hue, $shade);
    --alpha-fg: #{$alpha};
}

// Set background color custom properties
@mixin color-bg($hue, $shade) {
    --hue-bg: #{$hue};
    --saturation-bg: #{map-get($saturation, $shade)};
    --lightness-bg: #{map-get($lightness, $shade)};
    --alpha-bg: 100%;
}

@mixin color-bg-transparent($hue, $shade, $alpha) {
    @include color-bg($hue, $shade);
    --alpha-bg: #{$alpha};
}

// Set the element's color based on the values of those properties
@mixin set-colors() {
    color: hsla(var(--hue-fg), var(--saturation-fg), var(--lightness-fg),
        var(--alpha-fg));
    background-color: hsla(var(--hue-bg), var(--saturation-bg),
        var(--lightness-bg), var(--alpha-bg));
}


// Component mixins -----------------------------------------------------------

// Button           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

@mixin button($size) {
    border: none;
    border-radius: $button-border-radius;
    padding: ($button-padding-sides * $size) ($button-padding-topbot * $size);
    font-size: ($button-font-size * $size);
    text-decoration: none;

    &:hover,
    &:active {
        cursor: pointer;
    }
}

@mixin button-color($hue, $bgshade, $textshade) {
    @include color-fg($hue, $textshade);
    @include color-bg($hue, $bgshade);
    @include set-colors();
    text-shadow: 1px 1px 2px hsla(var(--hue-bg), var(--saturation-bg),
        10%, var(--alpha-bg));

    &:hover,
    &:focus {
        --lightness-bg: #{map-get($lightness, $bgshade) - $button-interact-shading};
    }

    &:active {
        --lightness-bg: #{map-get($lightness, $bgshade) + $button-interact-shading};
    }
}

@mixin button-color-transparent($hue, $bgshade, $textshade) {
    @include button-color($hue, $bgshade, $textshade);
    @include color-bg-transparent(0, $bgshade, 0%);
    border: 1px solid hsla(var(--hue-fg), var(--saturation-fg), 
        var(--lightness-fg), var(--alpha-fg));
}

// Card             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

@mixin card() {
    width: fit-content;
    margin: $card-margin;
    border-radius: $card-border-radius;
    box-shadow: $card-shadow;
}

@mixin card-heading() {
    color: inherit;
    font-size: $card-heading-font-size;
    font-weight: $card-heading-font-weight;
    margin: 0;
    padding: $card-padding $card-heading-padding-bottom;
    box-shadow: $card-heading-shadow;
}

@mixin card-body() {
    padding: $card-padding;
}

// Hero             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

@mixin hero() {
    padding: $hero-padding;

    h1, h2, h3, h4, h5, h6 {
        font-weight: $hero-heading-font-weight;
    }

    p {
        font-size: $hero-paragraph-font-size;
        --alpha-fg: #{$hero-paragraph-alpha};
        @include set-colors();
    }
}

@mixin hero-transparent() {
    --alpha-bg: #{$hero-transparent-alpha};
    @include set-colors();

    h1, h2, h3, h4, h5, h6, p {
        --alpha-bg: 0%;
        @include set-colors();
    }
}

// Navbar           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

@mixin navbar() {
    .container,
    .container-full {
        padding-top: 0;
        padding-bottom: 0;
    }

    ul {
        margin: 0;
        padding: 0;
        list-style: none;
        display: flex;
        flex-wrap: wrap;
    }

    li {
        height: $navbar-height;
        padding: 0 $navbar-item-spacing 0 0;
        // vertically center content
        display: flex;
        flex-direction: column;
        justify-content: center;
        font-weight: $navbar-text-font-weight;
    }

    li:last-of-type {
        padding-right: 0;
    }

    a:link,
    a:visited {
        font-weight: $navbar-link-font-weight;
        color: inherit;
        text-decoration: none;
    }

    a:hover,
    a:focus,
    a:active {
        box-shadow: 0 $navbar-link-underline-thickness;
    }

    img {
        max-height: $navbar-image-max-height;
    }
}

// align all nav items (right or center)
@mixin nav-align($align) {
    @if $align == right {
        $align: flex-end;
    }

    ul {
        justify-content: $align;
    }
}

// special divider to right-justify items that follow it
@mixin nav-fill() {
    flex-grow: 10;
    padding: 0;
}

// don't wrap the navbar on small screen sizes
@mixin nav-nowrap() {
    ul {
        flex-wrap: nowrap;
    }
}

// Miscellaneous    -----------------------------------------------------------

@mixin hr() {
    border: none;
    margin: $hr-margin;
    height: $hr-thickness;
}
